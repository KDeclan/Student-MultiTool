{"version":3,"sources":["ThemeContext.js","App.js","reportWebVitals.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","useTheme","ThemeProvider","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ThemeContext","createContext","useContext","_ref","children","theme","setTheme","useState","savedTheme","localStorage","getItem","useEffect","setItem","React","createElement","Provider","value","toggleTheme","prevTheme","className","SideBar","lazy","Promise","all","e","then","bind","MainContent","App","showAddForm","setShowAddForm","currentFilter","setCurrentFilter","Suspense","fallback","onAddTaskClick","handleAddTaskClick","onFilterChange","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"uFAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAEA,MAAMG,EAAeC,0BAERN,EAAWA,IAAMO,qBAAWF,GAE5BJ,EAAgBO,IAAkB,IAAjBC,SAAEA,GAAUD,EACxC,MAAOE,EAAOC,GAAYC,mBAAS,KACjC,MAAMC,EAAaC,aAAaC,QAAQ,SACxC,OAAOF,GAA0B,UAGnCG,oBAAU,KACRF,aAAaG,QAAQ,QAASP,IAC7B,CAACA,IAMJ,OACEQ,IAAAC,cAACd,EAAae,SAAQ,CAACC,MAAO,CAAEX,QAAOY,YALrBA,KAClBX,EAAUY,GAA6B,UAAdA,EAAwB,OAAS,YAKxDL,IAAAC,cAAA,OAAKK,UAAWd,GAAQD,+MChB9B,MAAMgB,EAAUC,eAAK,IAAMC,QAAAC,IAAA,CAAA/B,EAAAgC,EAAA,GAAAhC,EAAAgC,EAAA,GAAAhC,EAAAgC,EAAA,KAAAC,KAAAjC,EAAAkC,KAAA,WACrBC,EAAcN,eAAK,IAAMC,QAAAC,IAAA,CAAA/B,EAAAgC,EAAA,GAAAhC,EAAAgC,EAAA,KAAAC,KAAAjC,EAAAkC,KAAA,WAqChBE,MAnCHA,KACV,MAAOC,EAAaC,GAAkBvB,oBAAS,IACxCwB,EAAeC,GAAoBzB,mBAAS,iBAUnD,OACEM,IAAAC,cAAClB,IAAa,KACZiB,IAAAC,cAAA,OAAKK,UAAU,iBACbN,IAAAC,cAACmB,WAAQ,CAACC,SAAUrB,IAAAC,cAAA,WAAK,eACvBD,IAAAC,cAAA,OAAKK,UAAU,WACbN,IAAAC,cAACM,EAAO,CACNe,eAdeC,KACzBN,GAAe,IAcLO,eAXgBC,IAC1BN,EAAiBM,OAaXzB,IAAAC,cAAA,OAAKK,UAAU,gBACbN,IAAAC,cAACa,EAAW,CACVE,YAAaA,EACbC,eAAgBA,EAChBC,cAAeA,SCvBdQ,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCjD,EAAAgC,EAAA,GAAAC,KAAAjC,EAAAkC,KAAA,UAAqBD,KAAKtB,IAAiD,IAAhDuC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS3C,EACpEuC,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,MCDDO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtC,IAAAC,cAACD,IAAMuC,WAAU,KACfvC,IAAAC,cAACc,EAAG,QAORW","file":"static/js/main.9a6bb2ec.chunk.js","sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(() => {\n    const savedTheme = localStorage.getItem(\"theme\");\n    return savedTheme ? savedTheme : \"light\";\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <div className={theme}>{children}</div>\n    </ThemeContext.Provider>\n  );\n};\n","import React, { useState, lazy, Suspense } from \"react\";\nimport { ThemeProvider } from \"./ThemeContext\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport \"./global.css\";\n\nconst SideBar = lazy(() => import(\"./SideBar\"));\nconst MainContent = lazy(() => import(\"./MainContent\"));\n\nconst App = () => {\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [currentFilter, setCurrentFilter] = useState(\"Full Schedule\");\n\n  const handleAddTaskClick = () => {\n    setShowAddForm(true);\n  };\n\n  const handleFilterChange = (filter) => {\n    setCurrentFilter(filter);\n  };\n\n  return (\n    <ThemeProvider>\n      <div className=\"app-container\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <div className=\"sidebar\">\n            <SideBar\n              onAddTaskClick={handleAddTaskClick}\n              onFilterChange={handleFilterChange}\n            />\n          </div>\n          <div className=\"main-content\">\n            <MainContent\n              showAddForm={showAddForm}\n              setShowAddForm={setShowAddForm}\n              currentFilter={currentFilter}\n            />\n          </div>\n        </Suspense>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}