{"version":3,"sources":["MainContent.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ThemeContext__WEBPACK_IMPORTED_MODULE_1__","react_icons_fa__WEBPACK_IMPORTED_MODULE_2__","useFilteredTodos","todos","filter","useMemo","today","Date","setHours","todayStr","toISOString","slice","todo","taskDateStr","date","inOneWeek","setDate","getDate","inOneWeekStr","MainContent","_ref","showAddForm","setShowAddForm","currentFilter","timeOfDay","setTimeofDay","useState","taskName","setTaskName","taskDate","setTaskDate","setTodos","savedTodos","localStorage","getItem","JSON","parse","theme","useTheme","isDayOrNight","useCallback","hour","getHours","getRandomMessage","messages","Math","floor","random","length","useEffect","updateTimeOfDay","interval","setInterval","clearInterval","setItem","stringify","filteredTodos","React","createElement","id","className","data-theme","style","alignSelf","key","fontSize","marginTop","type","onClick","handleCancel","marginBottom","FaTimes","onSubmit","event","preventDefault","newTodo","name","toggled","updatedTodos","placeholder","value","onChange","e","target","autoFocus","maxLength","required","borderRadius","padding","map","index","concat","newTodos","idx","toggleTodo","marginLeft","backgroundColor","stopPropagation","_","deleteTodo","FaTrash"],"mappings":"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","file":"static/js/4.c72af5fb.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback, useMemo } from \"react\";\nimport { useTheme } from \"./ThemeContext\";\nimport { FaTimes, FaTrash } from \"react-icons/fa\";\nimport \"./MainContent.css\";\nimport \"./global.css\";\n\nconst MainContent = ({ showAddForm, setShowAddForm, currentFilter }) => {\n  const [timeOfDay, setTimeofDay] = useState(\"\");\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskDate, setTaskDate] = useState(\"\");\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    return savedTodos ? JSON.parse(savedTodos) : [];\n  });\n\n  const { theme } = useTheme();\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newTodo = {\n      name: taskName,\n      date: taskDate,\n      toggled: false,\n    };\n\n    const updatedTodos = [...todos, newTodo];\n    setTodos(updatedTodos);\n    setTaskName(\"\");\n    setTaskDate(\"\");\n    setShowAddForm(false);\n  };\n\n  const toggleTodo = (index) => {\n    const newTodos = todos.map((todo, idx) => {\n      if (idx === index) {\n        return { ...todo, toggled: !todo.toggled };\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = (index) => {\n    const updatedTodos = todos.filter((_, idx) => idx !== index);\n    setTodos(updatedTodos);\n  };\n\n  const handleCancel = () => {\n    setShowAddForm(false);\n  };\n\n  const isDayOrNight = useCallback(() => {\n    const now = new Date();\n    const hour = now.getHours();\n\n    const morningMessages = [\n      \"Good Morning ðŸŒž\",\n      \"Early Bird Gets The ðŸª±\",\n      \"Rise and Shine! ðŸŒ…\",\n    ];\n    const afternoonMessages = [\n      \"Good Afternoon ðŸ¤ \",\n      \"Another Day Another ðŸ’µ!\",\n      \"Don't Forget to Take Breaks! ðŸ™‚\",\n    ];\n    const nightMessages = [\n      \"Good Night ðŸ˜´\",\n      \"ðŸ’¤ðŸ’¤ðŸ’¤\",\n      \"It's Late ðŸŒ™ Remember to Take Breaks\",\n    ];\n\n    const getRandomMessage = (messages) => {\n      const index = Math.floor(Math.random() * messages.length);\n      return messages[index];\n    };\n\n    if (hour >= 0 && hour <= 11) {\n      return getRandomMessage(morningMessages);\n    } else if (hour >= 12 && hour < 18) {\n      return getRandomMessage(afternoonMessages);\n    } else {\n      return getRandomMessage(nightMessages);\n    }\n  }, []);\n\n  useEffect(() => {\n    const updateTimeOfDay = () => {\n      setTimeofDay(isDayOrNight());\n    };\n\n    updateTimeOfDay();\n\n    const interval = setInterval(updateTimeOfDay, 3600000); // 3600000 ms = 1 hour\n    return () => clearInterval(interval);\n  }, [isDayOrNight]);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const filteredTodos = useFilteredTodos(todos, currentFilter);\n\n  return (\n    <div\n      id=\"maincontent-top-level\"\n      className=\"d-flex flex-column vh-100\"\n      data-theme={theme}\n    >\n      <div id=\"main-heading\" style={{ alignSelf: \"center\" }}>\n        <h1\n          className=\"animated-text\"\n          key={timeOfDay}\n          style={{ fontSize: \"3rem\" }}\n        >\n          {timeOfDay}\n        </h1>\n        <h2 className=\"text-center\" style={{ marginTop: \".5em\" }}>\n          {currentFilter}\n        </h2>\n      </div>\n      <div id=\"main-body\" style={{ marginTop: \".5em\" }}>\n        {showAddForm ? (\n          <div className=\"form-container\">\n            <button\n              type=\"button\"\n              onClick={handleCancel}\n              className=\"btn btn-danger\"\n              style={{\n                alignSelf: \"end\",\n                marginBottom: \"3em\",\n                marginTop: \"1em\",\n              }}\n            >\n              <FaTimes />\n            </button>\n            <form className=\"form-container\" onSubmit={handleFormSubmit}>\n              <input\n                type=\"text\"\n                placeholder=\"enter task...\"\n                value={taskName}\n                onChange={(e) => setTaskName(e.target.value)}\n                autoFocus\n                maxLength=\"20\"\n                required\n                style={{ borderRadius: \".5em\", padding: \".5em .5em\" }}\n              />\n              <input\n                type=\"date\"\n                value={taskDate}\n                onChange={(e) => setTaskDate(e.target.value)}\n                required\n                style={{ borderRadius: \".5em\", padding: \".3em .3em\" }}\n              />\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Submit\n              </button>\n            </form>\n          </div>\n        ) : (\n          <div id=\"todos-display\" className=\"container\">\n            {filteredTodos.map((todo, index) => (\n              <div\n                key={index}\n                className={`container todo-card ${\n                  todo.toggled ? \"toggled\" : \"\"\n                }`}\n                onClick={() => toggleTodo(index)}\n              >\n                <div className=\"todo-content\" style={{ marginLeft: \"2em\" }}>\n                  <div\n                    className=\"circle-toggle\"\n                    style={{\n                      backgroundColor: todo.toggled\n                        ? \"var(--accent-color)\"\n                        : \"transparent\",\n                    }}\n                  ></div>\n                  <p style={{ marginLeft: \"2em\" }}>{todo.name}</p>\n                  <div className=\"todo-inline\">\n                    <p style={{ marginLeft: \"2em\" }}>{todo.date}</p>\n                    {todo.toggled && (\n                      <button\n                        className=\"btn btn-danger trash-btn\"\n                        style={{ marginLeft: \"auto\", marginBottom: \".5em\" }}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          deleteTodo(index);\n                        }}\n                      >\n                        <FaTrash />\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst useFilteredTodos = (todos, filter) => {\n  return useMemo(() => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const todayStr = today.toISOString().slice(0, 10);\n\n    return todos.filter((todo) => {\n      const taskDateStr = new Date(todo.date).toISOString().slice(0, 10);\n      if (filter === \"Today\") {\n        return taskDateStr === todayStr;\n      } else if (filter === \"Next 7 Days\") {\n        const inOneWeek = new Date(today);\n        inOneWeek.setDate(today.getDate() + 7);\n        const inOneWeekStr = inOneWeek.toISOString().slice(0, 10);\n        return taskDateStr >= todayStr && taskDateStr < inOneWeekStr;\n      }\n      return true;\n    });\n  }, [todos, filter]);\n};\n\nexport default MainContent;\n"],"sourceRoot":""}