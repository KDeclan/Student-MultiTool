{"version":3,"sources":["SideBar.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ThemeContext__WEBPACK_IMPORTED_MODULE_1__","react_icons_fa__WEBPACK_IMPORTED_MODULE_3__","react_icons_go__WEBPACK_IMPORTED_MODULE_4__","react_icons_io5__WEBPACK_IMPORTED_MODULE_5__","SettingsSection","_ref2","handleSettingsClick","theme","toggleTheme","React","createElement","Fragment","id","FaCog","GoMoon","className","type","onChange","checked","onClick","QuoteDisplay","_ref3","quote","handleNewQuote","handleQuoteDisplay","backgroundColor","FaQuoteRight","size","style","color","text","alignSelf","author","TimerDisplay","_ref4","handleShowTimer","studyTime","breakTime","incrementStudy","decrementStudy","incrementBreak","decrementBreak","timerActive","setTimerActive","useState","timeLeft","setTimeLeft","intervalId","setIntervalId","isStudyTime","setIsStudyTime","alarmPlaying","setAlarmPlaying","audioRef","useRef","volume","setVolume","useEffect","current","Audio","process","pause","toggleTimer","useCallback","clearInterval","setInterval","prevTime","Math","max","prevTimerActive","playSound","play","then","catch","err","console","error","FaStopwatch","GoArrowUp","GoArrowDown","fontSize","borderRadius","minutes","floor","seconds","concat","toString","padStart","formatTime","FaPause","FaPlay","stopTimer","FaStop","stopAlarm","currentTime","FaMusic","min","step","value","e","target","width","background","MainSection","_ref5","onAddTaskClick","onFilterChange","marginTop","IoAddCircle","margin","FaCalendarDay","FaCalendarWeek","FaCalendarAlt","marginBottom","SideBar","_ref","showSettings","setShowSettings","showQuoteDisplay","setShowQuoteDisplay","showTimer","setShowTimer","setStudyTime","setBreakTime","setBackgroundColor","setQuote","useTheme","data-theme","boxShadow","position","top","left","quoteColors","randomColor","random","length","fetch","response","json","data","content"],"mappings":"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","file":"static/js/5.3eaa5989.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useTheme } from \"./ThemeContext\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  FaCalendarDay,\n  FaCalendarWeek,\n  FaCalendarAlt,\n  FaCog,\n  FaStopwatch,\n  FaQuoteRight,\n  FaPlay,\n  FaPause,\n  FaStop,\n  FaMusic,\n} from \"react-icons/fa\";\nimport { GoArrowUp, GoArrowDown, GoMoon } from \"react-icons/go\";\nimport { IoAddCircle } from \"react-icons/io5\";\nimport \"./SideBar.css\";\nimport \"./global.css\";\n\nconst SideBar = ({ onAddTaskClick, onFilterChange }) => {\n  const [showSettings, setShowSettings] = useState(false);\n  const [showQuoteDisplay, setShowQuoteDisplay] = useState(false);\n  const [showTimer, setShowTimer] = useState(false);\n  const [studyTime, setStudyTime] = useState(25);\n  const [breakTime, setBreakTime] = useState(5);\n  const [backgroundColor, setBackgroundColor] = useState(\"\");\n  const [quote, setQuote] = useState({\n    text: \"Press 'New Quote' Button\",\n    author: \"\",\n  });\n  const { theme, toggleTheme } = useTheme();\n\n  const incrementStudy = () => {\n    if (studyTime < 60) {\n      setStudyTime(studyTime + 1);\n    }\n  };\n  const decrementStudy = () => {\n    if (studyTime > 1) {\n      setStudyTime(studyTime - 1);\n    }\n  };\n  const incrementBreak = () => {\n    if (breakTime < 30) {\n      setBreakTime(breakTime + 1);\n    }\n  };\n  const decrementBreak = () => {\n    if (breakTime > 1) {\n      setBreakTime(breakTime - 1);\n    }\n  };\n\n  const handleNewQuote = () => {\n    const quoteColors = [\n      \"#c8f4f3\",\n      \"#ff8680\",\n      \"#c2ffa9\",\n      \"#ffb783\",\n      \"#ff97ed\",\n      \"#b395ff\",\n      \"#A87676\",\n      \"#EBE3D5\",\n      \"#ffe9aa\",\n    ];\n    const randomColor =\n      quoteColors[Math.floor(Math.random() * quoteColors.length)];\n    setBackgroundColor(randomColor);\n\n    fetch(\"https://api.quotable.io/random\")\n      .then((response) => response.json())\n      .then((data) => setQuote({ text: data.content, author: data.author }))\n      .catch(() => setQuote({ text: \"Failed to load quote\", author: \"\" }));\n  };\n\n  return (\n    <div\n      id=\"sidebar-top-level\"\n      className=\"d-flex flex-column align-items-center justify-content-between vh-100\"\n      data-theme={theme}\n      style={{\n        boxShadow: \".2em 0 .5em var(--sidebar-shadow)\",\n        position: \"fixed\",\n        width: \"20em\",\n        top: 0,\n        left: 0,\n      }}\n    >\n      {showSettings ? (\n        <SettingsSection\n          handleSettingsClick={() => setShowSettings(!showSettings)}\n          theme={theme}\n          toggleTheme={toggleTheme}\n        />\n      ) : showQuoteDisplay ? (\n        <QuoteDisplay\n          quote={quote}\n          handleNewQuote={handleNewQuote}\n          handleQuoteDisplay={() => setShowQuoteDisplay(!showQuoteDisplay)}\n          backgroundColor={backgroundColor}\n        />\n      ) : showTimer ? (\n        <TimerDisplay\n          handleShowTimer={() => setShowTimer(!showTimer)}\n          studyTime={studyTime}\n          breakTime={breakTime}\n          incrementStudy={incrementStudy}\n          decrementStudy={decrementStudy}\n          incrementBreak={incrementBreak}\n          decrementBreak={decrementBreak}\n        />\n      ) : (\n        <MainSection\n          onAddTaskClick={onAddTaskClick}\n          onFilterChange={onFilterChange}\n          handleSettingsClick={() => setShowSettings(!showSettings)}\n          handleQuoteDisplay={() => setShowQuoteDisplay(!showQuoteDisplay)}\n          handleShowTimer={() => setShowTimer(!showTimer)}\n        />\n      )}\n    </div>\n  );\n};\n\nconst SettingsSection = ({ handleSettingsClick, theme, toggleTheme }) => (\n  <>\n    <div id=\"settings-top-bar\">\n      <h2 id=\"settings-head-text\">\n        <FaCog /> Settings\n      </h2>\n    </div>\n    <div id=\"color-settings\">\n      <h2>\n        <GoMoon />\n        Dark Mode\n      </h2>\n      <label className=\"toggle-switch\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle-switch-checkbox\"\n          onChange={toggleTheme}\n          checked={theme === \"dark\"}\n        />\n        <span className=\"toggle-switch-slider\"></span>\n      </label>\n    </div>\n    <div className=\"hover-effect return-btn-section\">\n      <button className=\"btn return-btn\" onClick={handleSettingsClick}>\n        ◄ Return\n      </button>\n    </div>\n  </>\n);\n\nconst QuoteDisplay = ({\n  quote,\n  handleNewQuote,\n  handleQuoteDisplay,\n  backgroundColor,\n}) => (\n  <>\n    <div id=\"quote-display\">\n      <h2>\n        <FaQuoteRight size=\"1.5rem\" /> Quote Machine\n      </h2>\n    </div>\n    <div id=\"quote-text\">\n      <p className=\"card p-3\" style={{ color: \"black\", backgroundColor }}>\n        {quote.text}\n      </p>\n      <p style={{ alignSelf: \"flex-end\" }}>- {quote.author || \"Unknown\"}</p>\n    </div>\n    <div id=\"new-quote-btn\">\n      <button className=\"btn btn-primary\" onClick={handleNewQuote}>\n        New Quote\n      </button>\n    </div>\n    <div className=\"hover-effect return-btn-section\">\n      <button className=\"btn return-btn\" onClick={handleQuoteDisplay}>\n        ◄ Return\n      </button>\n    </div>\n  </>\n);\n\nconst TimerDisplay = ({\n  handleShowTimer,\n  studyTime,\n  breakTime,\n  incrementStudy,\n  decrementStudy,\n  incrementBreak,\n  decrementBreak,\n}) => {\n  const [timerActive, setTimerActive] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(studyTime * 60);\n  const [intervalId, setIntervalId] = useState(null);\n  const [isStudyTime, setIsStudyTime] = useState(true);\n  const [alarmPlaying, setAlarmPlaying] = useState(false);\n  const audioRef = React.useRef(null);\n  const [volume, setVolume] = useState(0.5);\n\n  useEffect(() => {\n    audioRef.current = new Audio(process.env.PUBLIC_URL + \"/timer-sound.mp3\");\n\n    return () => {\n      audioRef.current.pause();\n      audioRef.current = null;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume;\n    }\n  }, [volume]);\n\n  useEffect(() => {\n    setTimeLeft((isStudyTime ? studyTime : breakTime) * 60);\n  }, [studyTime, breakTime, isStudyTime]);\n\n  const toggleTimer = useCallback(() => {\n    if (timerActive) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    } else {\n      const id = setInterval(() => {\n        setTimeLeft((prevTime) => {\n          return Math.max(prevTime - 1, 0);\n        });\n      }, 1000);\n      setIntervalId(id);\n    }\n    setTimerActive((prevTimerActive) => !prevTimerActive);\n  }, [timerActive, intervalId, setTimeLeft, setIntervalId]);\n\n  const playSound = useCallback(() => {\n    if (audioRef.current) {\n      audioRef.current\n        .play()\n        .then(() => {\n          setAlarmPlaying(true);\n          toggleTimer();\n          setIsStudyTime(!isStudyTime);\n          setTimeLeft((isStudyTime ? breakTime : studyTime) * 60);\n        })\n        .catch((err) => console.error(\"Failed to play sound:\", err));\n    }\n  }, [\n    setAlarmPlaying,\n    setIsStudyTime,\n    setTimeLeft,\n    toggleTimer,\n    studyTime,\n    breakTime,\n    isStudyTime,\n  ]);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      playSound();\n    }\n  }, [timeLeft, playSound]);\n\n  const stopTimer = () => {\n    if (intervalId) clearInterval(intervalId);\n    setTimerActive(false);\n    setIntervalId(null);\n    setTimeLeft((isStudyTime ? studyTime : breakTime) * 60);\n  };\n\n  const stopAlarm = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setAlarmPlaying(false);\n    }\n  };\n\n  const formatTime = (timeLeft) => {\n    const minutes = Math.floor(timeLeft / 60);\n    const seconds = timeLeft % 60;\n    return `${minutes.toString().padStart(2, \"0\")}:${seconds\n      .toString()\n      .padStart(2, \"0\")}`;\n  };\n\n  return (\n    <>\n      <div id=\"timer-display\" className=\"border-bar\">\n        <h2>\n          <FaStopwatch /> Study Clock\n        </h2>\n      </div>\n      <div id=\"timer-container\">\n        <div id=\"study-section\">\n          <p>Study</p>\n          <p className=\"hover-effect\" onClick={incrementStudy}>\n            <GoArrowUp color=\"var(--accent-color)\" />\n          </p>\n          <p>{studyTime}</p>\n          <p className=\"hover-effect\" onClick={decrementStudy}>\n            <GoArrowDown color=\"var(--accent-color)\" />\n          </p>\n        </div>\n        <div id=\"break-section\">\n          <p>Break</p>\n          <p className=\"hover-effect\" onClick={incrementBreak}>\n            <GoArrowUp color=\"var(--accent-color)\" />\n          </p>\n          <p>{breakTime}</p>\n          <p className=\"hover-effect\" onClick={decrementBreak}>\n            <GoArrowDown color=\"var(--accent-color)\" />\n          </p>\n        </div>\n      </div>\n      <div\n        id=\"time-display\"\n        className=\"card p-3\"\n        style={{\n          color: \"black\",\n          fontSize: \"2rem\",\n        }}\n      >\n        <p style={{ backgroundColor: \"#ccc\", borderRadius: \".2em\" }}>\n          {formatTime(timeLeft)}\n        </p>\n        <div id=\"time-btns\">\n          <button className=\"btn btn-primary\" onClick={toggleTimer}>\n            {timerActive ? <FaPause /> : <FaPlay />}\n          </button>\n          <button className=\"btn btn-primary\" onClick={stopTimer}>\n            <FaStop />\n          </button>\n          {alarmPlaying && (\n            <button className=\"btn btn-warning\" onClick={stopAlarm}>\n              <FaMusic />\n            </button>\n          )}\n        </div>\n      </div>\n      <div className=\"volume-slider-container\">\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.01\"\n          value={volume}\n          onChange={(e) => setVolume(e.target.value)}\n          style={{ width: \"100%\", background: \"transparent\" }}\n        />\n      </div>\n      <div className=\"hover-effect return-btn-section\">\n        <button className=\"btn return-btn\" onClick={handleShowTimer}>\n          ◄ Return\n        </button>\n      </div>\n    </>\n  );\n};\n\nconst MainSection = ({\n  onAddTaskClick,\n  onFilterChange,\n  handleSettingsClick,\n  handleQuoteDisplay,\n  handleShowTimer,\n}) => (\n  <>\n    <div\n      id=\"add-bttn-section\"\n      className=\"hover-effect\"\n      style={{ fontSize: \"2rem\", marginTop: \".5em\" }}\n    >\n      <p id=\"add-bttn\" onClick={onAddTaskClick}>\n        <IoAddCircle /> Add Task\n      </p>\n    </div>\n    <div\n      id=\"date-tags\"\n      className=\"border-bar\"\n      style={{ fontSize: \"2rem\", margin: \"1em 0\" }}\n    >\n      <p\n        id=\"today-tag\"\n        className=\"hover-effect\"\n        onClick={() => onFilterChange(\"Today\")}\n      >\n        <FaCalendarDay /> Today\n      </p>\n      <p\n        id=\"sevenDay-tag\"\n        className=\"hover-effect\"\n        onClick={() => onFilterChange(\"Next 7 Days\")}\n      >\n        <FaCalendarWeek /> Next 7 Days\n      </p>\n      <p\n        id=\"fullDay-tag\"\n        className=\"hover-effect\"\n        onClick={() => onFilterChange(\"Full Schedule\")}\n      >\n        <FaCalendarAlt /> Full Schedule\n      </p>\n    </div>\n    <div\n      id=\"tools\"\n      className=\"border-bar\"\n      style={{ fontSize: \"2rem\", margin: \"1em 0\" }}\n    >\n      <p className=\"hover-effect\" onClick={handleQuoteDisplay}>\n        <FaQuoteRight size=\"1.5rem\" /> Quote Machine\n      </p>\n      <p className=\"hover-effect\" onClick={handleShowTimer}>\n        <FaStopwatch /> Study Clock\n      </p>\n    </div>\n    <div\n      id=\"settings\"\n      className=\"hover-effect\"\n      style={{ fontSize: \"2rem\", marginBottom: \".5em\" }}\n    >\n      <p onClick={handleSettingsClick}>\n        <FaCog /> Settings\n      </p>\n    </div>\n  </>\n);\n\nexport default SideBar;\n"],"sourceRoot":""}